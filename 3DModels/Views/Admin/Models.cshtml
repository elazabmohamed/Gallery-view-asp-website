@model _3DModels.Models.Model

@{
    ViewBag.Title = "Add Model";
}

<h2>Add Model</h2>

@using (Html.BeginForm("Models", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Add a model to the model library ya mazen</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Platform, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Platform, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Platform, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
        </div>
    </div>


    <fieldset class="form-group">
        <legend>@Html.LabelFor(model => model.Style, htmlAttributes: new { @class = "control-label col-md-2" })</legend>
        <div class="form-check">
            <label class="form-check-label">
                @Html.RadioButtonFor(model => model.Style,"Classic", new { htmlAttributes = new { @class = "form-control" } })
                Classic
            </label>
        </div>


        <div class="form-check">
            <label class="form-check-label">
                @Html.RadioButtonFor(model => model.Style,"Modern", new { htmlAttributes = new { @class = "form-control" } })
                Modern
            </label>
        </div>
        <div class="form-check disabled">
            <label class="form-check-label">
                @Html.RadioButtonFor(model => model.Style,"Ethnic", new { htmlAttributes = new { @class = "form-control" } })
                Ethnic
            </label>
        </div>
        @Html.ValidationMessageFor(model => model.Style, "", new { @class = "text-danger" })
    </fieldset>



























    <div class="form-group">
        @Html.LabelFor(model => model.Render, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Render, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Render, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
            <!---->
            <label for="ModelImage">Upload Model Render:</label>
            <input type="file" required name="ModelImage" id="ModelImage" /><br><br>
            <br><br>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
            <!---->

            <label for="ModelFile">Upload Model:</label>
            <input type="file" required name="ModelFile" id="ModelFile" /><br><br>
            <br><br>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create a model" class="btn btn-outline-success" />

        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Back to Home", "Index", "Admin")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
